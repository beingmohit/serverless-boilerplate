service: ${env:APP_NAME}

frameworkVersion: ">=1.5.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs4.3

functions:
  api:
    handler: handler.graphql
    events:
    - http:
        path: graphql
        method: post
        cors: true
        integration: lambda-proxy
    - http:
        path: graphql
        method: get
        cors: true
        integration: lambda-proxy
    environment: 
      APP_NAME: ${env:APP_NAME}
      URL: ${env:URL}
      S3_BUCKET: ${env:S3_BUCKET}
      MOCKED_DATABASE: ${env:MOCKED_DATABASE}
      NODE_ENV: ${env:NODE_ENV}
      AUTH_CLIENT_SECRET: ${env:AUTH_CLIENT_SECRET}
      AUTH_CLIENT_ID: ${env:AUTH_CLIENT_ID}
      
resources:
  Resources:
    WebsiteS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${env:S3_BUCKET}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html
    WebsiteS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: WebsiteS3Bucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
              - s3:GetObject
              Resource:
              - Fn::Join:
                - ''
                - - 'arn:aws:s3:::'
                  - Ref: WebsiteS3Bucket
                  - "/*"
